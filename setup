#!/bin/bash

# This script will setup a new mac with my preferred settings and apps
install_homebrew() {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

install_homebrew_packages() {
    brew install $(<${PWD}/brew_formulae.txt)
    brew install --cask $(<${PWD}/brew_casks.txt)
}

install_oh_my_zsh() {
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
}

configure_github_interactively() {
    echo "================================================================================"
    echo "                           GitHub Setup Instructions                            "
    echo "================================================================================"
    echo "This script will guide you through setting up your GitHub SSH key and Git config."
    echo "Please provide the requested information."
    echo ""

    read -p "Enter your GitHub email address (e.g., your_email@example.com): " github_email
    read -p "Enter your GitHub username (e.g., octocat): " github_username

    echo ""
    echo "1. Generating SSH key..."
    ssh-keygen -t ed25519 -C "$github_email" -f ~/.ssh/github_id_ed25519 -N ""
    echo "SSH key generated at ~/.ssh/github_id_ed25519"
    echo ""

    echo "2. Adding SSH key to ssh-agent..."
    ssh-add ~/.ssh/github_id_ed25519
    echo "SSH key added to agent."
    echo ""

    echo "3. Configuring global Git user name and email..."
    git config --global user.name "$github_username"
    git config --global user.email "$github_email"
    echo "Git global config set."
    echo ""

    echo "4. Appending GitHub SSH config to ~/.ssh/config..."
    echo "" >> ~/.ssh/config
    echo "Host github.com" >> ~/.ssh/config
    echo "  HostName github.com" >> ~/.ssh/config
    echo "  User git" >> ~/.ssh/config
    echo "  IdentityFile ~/.ssh/github_id_ed25519" >> ~/.ssh/config
    echo "  IdentitiesOnly yes" >> ~/.ssh/config
    echo "GitHub SSH config appended to ~/.ssh/config."
    echo ""

    echo "================================================================================"
    echo "IMPORTANT: Please add your new SSH public key to your GitHub account."
    echo "You can copy it using: pbcopy < ~/.ssh/github_id_ed25519.pub"
    echo "Then, go to GitHub -> Settings -> SSH and GPG keys -> New SSH key and paste it."
    echo "================================================================================"
    echo ""
}


sym_link_configs() {
    ln -s ${PWD}/config_files/zshrc ~/.zshrc
    ln -s ${PWD}/config_files/p10k.zsh ~/.p10k.zsh
    ln -s ${PWD}/config_files/vimrc ~/.vimrc
    ln -s ${PWD}/config_files/gitconfig ~/.gitconfig
    ln -s ${PWD}/config_files/ohmytmux/.tmux.conf ~/.tmux.conf
    ln -s ${PWD}/config_files/ohmytmux/.tmux.conf.local ~/.tmux.conf.local
    ln -s ${PWD}/config_files/aliases.zsh ~/.aliases.zsh
    ln -s ${PWD}/config_files/zshrc_env ~/.zshrc_env
    ln -s ${PWD}/vim ~/.vim
    # todo: clone the nvim repo
    ln -s ${PWD}/nvim ~/.config/nvim
    mkdir -p ~/Library/Application\ Support/eza
    ln -s ${PWD}/config_files/eza/themes/tokyonight.yml ~/Library/Application\ Support/eza/theme.yml
}

install_asdf_libraries() {
    asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git
    asdf install ruby latest

    asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
    asdf install nodejs latest
}

install_xcode_cli() {
    xcode-select --install
}

install_nvim_package_manager() {
	git clone --depth 1 https://github.com/wbthomason/packer.nvim\
	~/.local/share/nvim/site/pack/packer/start/packer.nvim
}

install_tmux_plugin_manager() {
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
}

install_homebrew
install_homebrew_packages
install_oh_my_zsh
setup_github
sym_link_configs
install_asdf_libraries
install_nvim_package_manager
install_tmux_plugin_manager
install_xcode_cli # This should be last since it requires user input in the pop-up window 
echo "
================================================================================"
echo "IMPORTANT: Please review the post_install.txt file for manual steps:"
echo "           ${PWD}/post_install.txt"
echo "================================================================================"

